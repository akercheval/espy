import sys
from pypy.interpreter.mixedmodule import MixedModule

class Module(MixedModule):
    appleveldefs = {}

    interpleveldefs = {
        'AfirmacionError' : 'interp_exceptions.W_AfirmacionError',
        'ArithmeticError' : 'interp_exceptions.W_AritmeticaError',
        'AritmeticaError' : 'interp_exceptions.W_AritmeticaError',
        'AssertionError' : 'interp_exceptions.W_AfirmacionError',
        'AtributoError' : 'interp_exceptions.W_AtributoError',
        'AttributeError' : 'interp_exceptions.W_AttributeError',
        'Aviso' : 'interp_exceptions.W_Aviso',
        'AvisoDespreciadoPendiente' : 'interp_exceptions.W_AvisoDespreciadoPendiente',
        'BaseException' : 'interp_exceptions.W_BaseException',
        'BufferError' : 'interp_exceptions.W_BuferError',
        'BuferError' : 'interp_exceptions.W_BuferError',
        'BusquedaError' : 'interp_exceptions.W_BusquedaError',
        'BytesAviso'  : 'interp_exceptions.W_BytesAviso',
        'BytesWarning'  : 'interp_exceptions.W_BytesAviso',
        'CeroDivisionError' : 'interp_exceptions.W_CeroDivisionError',
        'ClaveError' : 'interp_exceptions.W_ClaveError',
        'DeprecationWarning' : 'interp_exceptions.W_DeprecationWarning',
        'EjecAviso' : 'interp_exceptions.W_EjecAviso',
        'EjecError' : 'interp_exceptions.W_EjecAviso',
        'EOFError' : 'interp_exceptions.W_EOFError',
        'EnvironmentError' : 'interp_exceptions.W_EnvironmentError',
        'ErrorEstandar' : 'interp_exceptions.W_ErrorEstandar',
        'Exception' : 'interp_exceptions.W_Exception',
        'Excepcion' : 'interp_exceptions.W_Excepcion',
        'FloatingPointError' : 'interp_exceptions.W_FlotError',
        'FlotError' : 'interp_exceptions.W_FlotError',
        'FutureWarning' : 'interp_exceptions.W_FuturoAviso',
        'FuturoAviso' : 'interp_exceptions.W_FuturoAviso',
        'GeneratorExit' : 'interp_exceptions.W_GeneradorSalir',
        'GeneradorSalir' : 'interp_exceptions.W_GeneradorSalir',
        'IOError' : 'interp_exceptions.W_IOError',
        'ImportError' : 'interp_exceptions.W_ImportarError',
        'ImportarError' : 'interp_exceptions.W_ImportarError',
        'ImportarAviso' : 'interp_exceptions.W_ImportarAviso',
        'ImportWarning' : 'interp_exceptions.W_ImportarAviso',
        'IndentationError' : 'interp_exceptions.W_SangriaError',
        'IndexError' : 'interp_exceptions.W_IndiceError',
        'IndiceError' : 'interp_exceptions.W_IndiceError',
        'KeyError' : 'interp_exceptions.W_ClaveError',
        'KeyboardInterrupt' : 'interp_exceptions.W_TecladoInterrumpir',
        'LocalSueltoError' : 'interp_exceptions.W_LocalSueltoError',
        'LookupError' : 'interp_exceptions.W_BusquedaError',
        'MemoryError' : 'interp_exceptions.W_MemoriaError',
        'MemoriaError' : 'interp_exceptions.W_MemoriaError',
        'NameError' : 'interp_exceptions.W_NombreError',
        'NombreError' : 'interp_exceptions.W_NombreError',
        'NoImplementadoError' : 'interp_exceptions.W_NoImplementadoError',
        'NotImplementedError' : 'interp_exceptions.W_NoImplementadoError',
        'OSError' : 'interp_exceptions.W_OSError',
        'OverflowError' : 'interp_exceptions.W_SobranteError',
        'PareIteracion' : 'interp_exceptions.W_PareIteracion',
        'PendingDeprecationWarning' : 'interp_exceptions.W_PendingDeprecationWarning',
        'ReferenceError' : 'interp_exceptions.W_ReferenceError',
        'ReferenciaError' : 'interp_exceptions.W_ReferenciaError',
        'RuntimeError' : 'interp_exceptions.W_RuntimeError',
        'RuntimeWarning' : 'interp_exceptions.W_RuntimeWarning',
        'SangriaError' : 'interp_exceptions.W_SangriaError',
        'SobranteError' : 'interp_exceptions.W_SobranteError',
        'StandardError' : 'interp_exceptions.W_StandardError',
        'StopIteration' : 'interp_exceptions.W_StopIteration',
        'SintaxisError' : 'interp_exceptions.W_SintaxisError',
        'SyntaxError' : 'interp_exceptions.W_SyntaxError',
        'SyntaxWarning' : 'interp_exceptions.W_SyntaxWarning',
        'SintaxisAviso' : 'interp_exceptions.W_SintaxisAviso',
        'SystemExit' : 'interp_exceptions.W_SystemExit',
        'SystemError' : 'interp_exceptions.W_SystemError',
        'TabError' : 'interp_exceptions.W_TabError',
        'TecladoInterrumpir' : 'interp_exceptions.W_TecladoInterrumpir',
        'TipoError' : 'interp_exceptions.W_TipoError',
        'TypeError' : 'interp_exceptions.W_TypeError',
        'UnboundLocalError' : 'interp_exceptions.W_UnboundLocalError',
        'UnicodeDecodeError' : 'interp_exceptions.W_UnicodeDecodeError',
        'UnicodeEncodeError' : 'interp_exceptions.W_UnicodeEncodeError',
        'UnicodeError' : 'interp_exceptions.W_UnicodeError',
        'UnicodError' : 'interp_exceptions.W_UnicodError',
        'UnicodeTranslateError' : 'interp_exceptions.W_UnicodeTranslateError',
        'UnicodeWarning' : 'interp_exceptions.W_UnicodeWarning',
        'UnicodAviso' : 'interp_exceptions.W_UnicodAviso',
        'UserWarning' : 'interp_exceptions.W_UserWarning',
        'UsuarioAviso' : 'interp_exceptions.W_UsuarioAviso',
        'ValueError' : 'interp_exceptions.W_ValueError',
        'ValorError' : 'interp_exceptions.W_ValorError',
        'Warning' : 'interp_exceptions.W_Warning',
        'ZeroDivisionError' : 'interp_exceptions.W_ZeroDivisionError',
        }

    if sys.platform.startswith("win"):
        interpleveldefs['WindowsError'] = 'interp_exceptions.W_WindowsError'

    def setup_after_space_initialization(self):
        from pypy.objspace.std.transparent import register_proxyable
        from pypy.module.exceptions import interp_exceptions

        for name, exc in interp_exceptions.__dict__.items():
            if isinstance(exc, type) and issubclass(exc, interp_exceptions.W_BaseException):
                register_proxyable(self.space, exc)
